name: Deployment

on:
  push:
  pull_request:
    paths:
      - ./src/**
      - ./test/**
      - ./bun.lock
      - ./package.json
      - ./nuxt.config.ts

env:
  NODE_VERSION: 20

defaults:
  run:
    shell: bash

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-bun-corepack.outputs.cache-key }}
      node-modules-cache-key: ${{ steps.cache-node-modules.outputs.cache-key }}

    steps:
      - uses: actions/checkout@v4

      # Cache Bun and Corepack installation
      - name: Cache Bun and Corepack
        id: cache-bun-corepack
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun
            ~/.corepack
          key: ${{ runner.os }}-bun-corepack-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-corepack-

      # Install Bun if not cached
      - run: |
          if ! command -v bun &> /dev/null; then
            curl -fsSL https://bun.sh/install | bash
          fi

      # Install dependencies using Bun
      - name: Setup Bun and install dependencies
        run: bun install
        working-directory: ./ # Ensure bun install runs in the correct working directory

      # Cache node_modules
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      # Reuse cached Bun/Corepack from setup job
      - name: Restore Cache for Bun and Corepack
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun
            ~/.corepack
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-bun-corepack-

      # Reuse cached node_modules from setup job
      - name: Restore Cache for node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.node-modules-cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Setup Node.js using the defined variable for node version
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies using Bun
        run: bun install

      - name: Lint
        run: bun run lint

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      # Reuse cached Bun/Corepack from setup job
      - name: Restore Cache for Bun and Corepack
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun
            ~/.corepack
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-bun-corepack-

      # Reuse cached node_modules from setup job
      - name: Restore Cache for node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.node-modules-cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Setup Node.js using the defined variable for node version
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies using Bun
        run: bun install

      - name: Playground prepare
        run: bun run dev:prepare

      - name: Test
        run: bun run test

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v4

      # Reuse cached Bun/Corepack from setup job
      - name: Restore Cache for Bun and Corepack
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun
            ~/.corepack
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-bun-corepack-

      # Reuse cached node_modules from setup job
      - name: Restore Cache for node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.node-modules-cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Setup Node.js using the defined variable for node version
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies using Bun
        run: bun install

      # Deploy step based on the branch
      - name: Deploy to production or beta
        run: |
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            bun release
          elif [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
            bun release:beta
          fi
        shell: bash
