name: Publish package

on:
  push:
    paths:
      - src/**
      - test/**
      - bun.lock
      - package.json
      - nuxt.config.ts
      - README.md
      - .github/workflows/publish.yml
  pull_request:
    paths:
      - src/**
      - test/**
      - bun.lock
      - package.json
      - nuxt.config.ts
      - README.md
      - .github/workflows/publish.yml

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BUN_VERSION: 1.2.5

defaults:
  run:
    shell: bash
    working-directory: ./ # Ensure bun install runs in the correct working directory

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

        with:
          bun-version: ${{ env.BUN_VERSION }}

      # Install dependencies using Bun
      - name: Install dependencies
        run: bun install

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Lint
        run: bun run lint

  typechecking:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Typecheck
        run: bun run typecheck

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Playground prepare
        run: bun run dev:prepare

      - name: Test
        run: bun run test

  publish:
    runs-on: ubuntu-latest
    needs:
      - setup
      - lint
      - typechecking
      - test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'

    permissions:
      contents: read
      packages: write # allow GITHUB_TOKEN to publish packages

    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Prepare
        id: prepare
        run: |
          bunx nuxi prepare
          bun run prepack

      - name: Publish RC
        if: github.ref == 'refs/heads/master'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          bunx changelogen --publishTag --prerelease --nameSuffix rc

      - name: Publish
        if: github.ref == 'refs/heads/dev'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          bunx changelogen --publishTag --release

      # - name: Create Github Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.prepare.outputs.VERSION }}
      #     release_name: Release ${{ steps.prepare.outputs.VERSION }}
      #     draft: false
      #     prerelease: |
      #       if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
      #         true
      #       elif [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
      #         false
      #       fi

      # - name: Publish to github
      #   uses: JS-DevTools/npm-publish@v3
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: |
      #       if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
      #         latest
      #       elif [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
      #         beta
      #       fi

      # - name: Publish to npm
      #   uses: JS-DevTools/npm-publish@v3
      #   with:
      #     token: ${{ secrets.NPM_TOKEN }}
      #     tag: |
      #       if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
      #         latest
      #       elif [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
      #         beta
      #       fi
