name: Publish package

on:
  push:
    paths:
      - src/**
      - test/**
      - bun.lock
      - package.json
      - nuxt.config.ts
      - README.md
      - .github/workflows/publish.yml
  pull_request:
    paths:
      - src/**
      - test/**
      - bun.lock
      - package.json
      - nuxt.config.ts
      - README.md
      - .github/workflows/publish.yml

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BUN_VERSION: 1.2.5

defaults:
  run:
    shell: bash
    working-directory: ./ # Ensure bun install runs in the correct working directory

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

        with:
          bun-version: ${{ env.BUN_VERSION }}

      # Install dependencies using Bun
      - name: Install dependencies
        run: bun install

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Lint
        run: bun run lint

  typechecking:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Typecheck
        run: bun run typecheck

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Playground prepare
        run: bun run dev:prepare

      - name: Test
        run: bun run test

  publish:
    runs-on: ubuntu-latest
    needs:
      - setup
      - lint
      - typechecking
      - test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'

    permissions:
      contents: write # allow GITHUB_TOKEN to create release
      packages: write # allow GITHUB_TOKEN to publish packages
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('**/bun.lock') }}

      - name: Prepare
        id: prepare
        run: |
          bunx nuxi prepare
          bun run prepack

      - name: Set git user
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish RC
        if: github.ref == 'refs/heads/dev'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bunx changelogen --publishTag rc --prerelease --nameSuffix rc --push

      - name: Publish
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bunx changelogen --release --publish --push

      - name: Publish to github
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: |
            if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
              latest
            elif [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
              beta
            fi
